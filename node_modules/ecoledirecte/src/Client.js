const RouteBuilder = require('./api/RouteBuilder');
const { EventEmitter } = require('events');

const Account = require('./structures/Account');

class Client extends EventEmitter {
    #token;
    
    constructor() {
        super();
        this.api = new RouteBuilder();
    }
    get token() {
        return this.#token;
    }
    async login(username, password) {
        const { data: res } = await this.api.login.post({ identifiant: username, motdepasse: password });

        this.#token = res.token;
        this.account = new Account(res.data.accounts[0]);

        this.emit('ready');
    }
    async getHomeworks() {
        const { data: res } = await this.api.Eleves(this.account.id).cahierdetexte.post({token: this.#token}, {verbe: 'get'});
        return res.data;
    }
    async getHomeworksForDay(options) {
        let day = options.day?.toString() || options.getDate().toString();
        let month = options.month?.toString() || (options.getMonth() + 1).toString();
        let year = options.year?.toString() || options.getFullYear().toString();

        if(day.length < 2) day = '0' + day;
        if(month.length < 2) month = '0' + month;

        const { data: res } = await this.api.Eleves(this.account.id).cahierdetexte(`${year}-${month}-${day}`).post({token: this.#token}, {verbe: 'get'});
        res.data.matieres.forEach(matiere => {
            // buffer code from https://github.com/Asgarrrr/EcoleDirecteAPI/blob/main/src/Student.js line 48.
            let buff = new Buffer.from(matiere.aFaire.contenu, 'base64');

            matiere.aFaire.contenu = buff
                .toString('ascii')
                .replace(/<\/?[^>]+(>|$)/g, "")
                .replace(/&eacute;/g, "é")
                .replace(/&egrave;/g, "è")
                .replace(/&ecirc;/g, "ê")
                .replace(/&agrave;/g, "à")
                .replace(/&nbsp;/g, " ")
                .replace(/&Iuml;/g, "Ï")
                .replace(/&deg;/g, "°")
                .replace(/&#39;/g, "'")
                .replace(/&ccedil;/g, "ç")
                .trim();
            
            matiere.nomProf = matiere.nomProf.slice(5, matiere.nomProf.length);
        });

        return res.data;
    }
}

module.exports = Client;